import 'package:daery/data/constant/constants.dart';
import 'package:daery/data/provider/theme_state.dart';
import 'package:daery/ui/widget/form/button_widget.dart';
import 'package:daery/ui/widget/form/input_widget.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';
import 'package:flutter_vector_icons/flutter_vector_icons.dart';

class AuthPage extends StatefulWidget {
  const AuthPage({Key? key}) : super(key: key);

  @override
  _AuthPageState createState() => _AuthPageState();
}

class _AuthPageState extends State<AuthPage> {
  AuthMode mode = AuthMode.Login;

  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size;
    final logo = Provider.of<ThemeState>(context).logo;
    return Scaffold(
      // appBar: AppBar(
      //
      // ),
      body: ListView(
        children: [
          ClipPath(
            clipper: CustomShape(),
            child: Container(
              height: mode == AuthMode.Login ? 300 : 250,
              color: Theme.of(context).primaryColor,
              child: Stack(
                alignment: Alignment.bottomCenter,
                  children: <Widget>[
                Positioned(
                  bottom: 10,
                  child: ClipOval(
                    child: Material(
                      color: Theme.of(context).scaffoldBackgroundColor,
                      child: InkWell(
                        splashColor: Theme.of(context).primaryColor,
                        onTap: () {},
                        child: SizedBox(
                            width: 90,
                            height: 90,
                            child: Icon(Feather.camera, color: Colors.black, size: 40)),
                      ),
                    ),
                  ),
                ),
                // ClipOval(
                //     child: Material(
                //         color: Theme.of(context).scaffoldBackgroundColor,
                //         child: InkWell(
                //           splashColor: Theme.of(context).primaryColor,
                //           onTap: () {},
                //           child: SizedBox(width: 56, height: 56, child: Icon(Icons.camera)),
                //         )
                //     )
                // )
                // Column(
                // mainAxisAlignment: MainAxisAlignment.center,
                //     crossAxisAlignment: CrossAxisAlignment.center,
                //     children: <Widget>[
                //       Container(
                //         width: size.width * .80,
                //         child: Image.asset(logo),
                //       ),
                //       SizedBox(height: 30),
                //       if(mode == AuthMode.Login)
                //         Text(
                //           "Welcome Back!",
                //           style: GoogleFonts.nunito(
                //             fontSize: 20,
                //             color: Theme.of(context).scaffoldBackgroundColor,
                //           ),
                //         ),
                //       SizedBox(height: 50),
                //     ]))
              ]),
            ),
          ),
          if (mode == AuthMode.Register) InputWidget(title: "Name"),
          InputWidget(title: "Mobile or Email"),
          InputWidget(
            title: "Password",
            password: true,
            suffixIcon: Icons.visibility,
          ),
          if (mode == AuthMode.Login)
            Row(mainAxisAlignment: MainAxisAlignment.end, children: <Widget>[
              Padding(
                padding: EdgeInsets.only(right: 20.0),
                child: TextButton(
                  child: Text("Forgot Password?",
                      style: GoogleFonts.comfortaa(
                        color: Constants.greyColor,
                      )),
                  onPressed: () {},
                ),
              )
            ]),
          Padding(
            padding: EdgeInsets.symmetric(horizontal: 10.0),
            child: ButtonWidget(
              title: "Log In",
              block: true,
              color: Theme.of(context).primaryColor,
            ),
          ),
          SizedBox(height: 20),
          Row(
            children: <Widget>[
              Expanded(
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 20.0),
                  child: Divider(
                    thickness: 1.0,
                    color: Colors.grey,
                  ),
                ),
              ),
              Text("or log in with",
                  style: GoogleFonts.nunito(
                    color: Constants.greyColor,
                  )),
              Expanded(
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 20.0),
                  child: Divider(
                    thickness: 1.0,
                    color: Colors.grey,
                  ),
                ),
              ),
            ],
          ),
          SizedBox(height: 20),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: <Widget>[
              // Social Auth
              ButtonWidget(
                  color: Color(0xFF456AFE), prefixIcon: FontAwesome.facebook_f),
              ButtonWidget(color: Colors.red, prefixIcon: FontAwesome.google),
              ButtonWidget(color: Colors.grey, prefixIcon: FontAwesome.apple),
            ],
          ),
          SizedBox(height: 20),
          Column(
            children: <Widget>[
              Text("Don't Have an account?"),
              TextButton(
                child: Text(
                  "Register",
                  style: GoogleFonts.comfortaa(
                    color: Theme.of(context).primaryColor,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                onPressed: () {
                  setState(() {
                    mode = mode == AuthMode.Login
                        ? AuthMode.Register
                        : AuthMode.Login;
                  });
                },
              ),
            ],
          ),
        ],
      ),
    );
  }
}

class CustomShape extends CustomClipper<Path> {
  @override
  Path getClip(Size size) {
    var path = Path();
    path.lineTo(0, size.height - 100);
    path.quadraticBezierTo(
        size.width / 2, size.height, size.width, size.height - 100);
    path.lineTo(size.width, 0);
    path.close();
    return path;
  }

  @override
  bool shouldReclip(covariant CustomClipper<Path> oldClipper) => true;
}

// AppBar(
// toolbarHeight: 250,
// shape: RoundedRectangleBorder(
// borderRadius: BorderRadius.vertical(
// bottom: Radius.circular(150),
// ),
// ),
// )
